# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_lite_support/cc/task/vision/proto/segmentations.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow_lite_support/cc/task/vision/proto/segmentations.proto',
  package='tflite.task.vision',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n@tensorflow_lite_support/cc/task/vision/proto/segmentations.proto\x12\x12tflite.task.vision\"L\n\x12SegmentationResult\x12\x36\n\x0csegmentation\x18\x01 \x03(\x0b\x32 .tflite.task.vision.Segmentation\"\xc6\x03\n\x0cSegmentation\x12\x17\n\rcategory_mask\x18\x01 \x01(\x0cH\x00\x12L\n\x10\x63onfidence_masks\x18\x04 \x01(\x0b\x32\x30.tflite.task.vision.Segmentation.ConfidenceMasksH\x00\x12\r\n\x05width\x18\x02 \x01(\x05\x12\x0e\n\x06height\x18\x03 \x01(\x05\x12\x45\n\x0e\x63olored_labels\x18\x05 \x03(\x0b\x32-.tflite.task.vision.Segmentation.ColoredLabel\x1a#\n\x0e\x43onfidenceMask\x12\x11\n\x05value\x18\x01 \x03(\x02\x42\x02\x10\x01\x1a[\n\x0f\x43onfidenceMasks\x12H\n\x0f\x63onfidence_mask\x18\x01 \x03(\x0b\x32/.tflite.task.vision.Segmentation.ConfidenceMask\x1aY\n\x0c\x43oloredLabel\x12\t\n\x01r\x18\x01 \x01(\r\x12\t\n\x01g\x18\x02 \x01(\r\x12\t\n\x01\x62\x18\x03 \x01(\r\x12\x12\n\nclass_name\x18\x04 \x01(\t\x12\x14\n\x0c\x64isplay_name\x18\x05 \x01(\tB\x0c\n\nmask_oneof'
)




_SEGMENTATIONRESULT = _descriptor.Descriptor(
  name='SegmentationResult',
  full_name='tflite.task.vision.SegmentationResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='segmentation', full_name='tflite.task.vision.SegmentationResult.segmentation', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=164,
)


_SEGMENTATION_CONFIDENCEMASK = _descriptor.Descriptor(
  name='ConfidenceMask',
  full_name='tflite.task.vision.Segmentation.ConfidenceMask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='tflite.task.vision.Segmentation.ConfidenceMask.value', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\020\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=388,
  serialized_end=423,
)

_SEGMENTATION_CONFIDENCEMASKS = _descriptor.Descriptor(
  name='ConfidenceMasks',
  full_name='tflite.task.vision.Segmentation.ConfidenceMasks',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='confidence_mask', full_name='tflite.task.vision.Segmentation.ConfidenceMasks.confidence_mask', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=425,
  serialized_end=516,
)

_SEGMENTATION_COLOREDLABEL = _descriptor.Descriptor(
  name='ColoredLabel',
  full_name='tflite.task.vision.Segmentation.ColoredLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='r', full_name='tflite.task.vision.Segmentation.ColoredLabel.r', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='g', full_name='tflite.task.vision.Segmentation.ColoredLabel.g', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='b', full_name='tflite.task.vision.Segmentation.ColoredLabel.b', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='class_name', full_name='tflite.task.vision.Segmentation.ColoredLabel.class_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='tflite.task.vision.Segmentation.ColoredLabel.display_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=518,
  serialized_end=607,
)

_SEGMENTATION = _descriptor.Descriptor(
  name='Segmentation',
  full_name='tflite.task.vision.Segmentation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='category_mask', full_name='tflite.task.vision.Segmentation.category_mask', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='confidence_masks', full_name='tflite.task.vision.Segmentation.confidence_masks', index=1,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='width', full_name='tflite.task.vision.Segmentation.width', index=2,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='height', full_name='tflite.task.vision.Segmentation.height', index=3,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='colored_labels', full_name='tflite.task.vision.Segmentation.colored_labels', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SEGMENTATION_CONFIDENCEMASK, _SEGMENTATION_CONFIDENCEMASKS, _SEGMENTATION_COLOREDLABEL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='mask_oneof', full_name='tflite.task.vision.Segmentation.mask_oneof',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=167,
  serialized_end=621,
)

_SEGMENTATIONRESULT.fields_by_name['segmentation'].message_type = _SEGMENTATION
_SEGMENTATION_CONFIDENCEMASK.containing_type = _SEGMENTATION
_SEGMENTATION_CONFIDENCEMASKS.fields_by_name['confidence_mask'].message_type = _SEGMENTATION_CONFIDENCEMASK
_SEGMENTATION_CONFIDENCEMASKS.containing_type = _SEGMENTATION
_SEGMENTATION_COLOREDLABEL.containing_type = _SEGMENTATION
_SEGMENTATION.fields_by_name['confidence_masks'].message_type = _SEGMENTATION_CONFIDENCEMASKS
_SEGMENTATION.fields_by_name['colored_labels'].message_type = _SEGMENTATION_COLOREDLABEL
_SEGMENTATION.oneofs_by_name['mask_oneof'].fields.append(
  _SEGMENTATION.fields_by_name['category_mask'])
_SEGMENTATION.fields_by_name['category_mask'].containing_oneof = _SEGMENTATION.oneofs_by_name['mask_oneof']
_SEGMENTATION.oneofs_by_name['mask_oneof'].fields.append(
  _SEGMENTATION.fields_by_name['confidence_masks'])
_SEGMENTATION.fields_by_name['confidence_masks'].containing_oneof = _SEGMENTATION.oneofs_by_name['mask_oneof']
DESCRIPTOR.message_types_by_name['SegmentationResult'] = _SEGMENTATIONRESULT
DESCRIPTOR.message_types_by_name['Segmentation'] = _SEGMENTATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SegmentationResult = _reflection.GeneratedProtocolMessageType('SegmentationResult', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENTATIONRESULT,
  '__module__' : 'tensorflow_lite_support.cc.task.vision.proto.segmentations_pb2'
  # @@protoc_insertion_point(class_scope:tflite.task.vision.SegmentationResult)
  })
_sym_db.RegisterMessage(SegmentationResult)

Segmentation = _reflection.GeneratedProtocolMessageType('Segmentation', (_message.Message,), {

  'ConfidenceMask' : _reflection.GeneratedProtocolMessageType('ConfidenceMask', (_message.Message,), {
    'DESCRIPTOR' : _SEGMENTATION_CONFIDENCEMASK,
    '__module__' : 'tensorflow_lite_support.cc.task.vision.proto.segmentations_pb2'
    # @@protoc_insertion_point(class_scope:tflite.task.vision.Segmentation.ConfidenceMask)
    })
  ,

  'ConfidenceMasks' : _reflection.GeneratedProtocolMessageType('ConfidenceMasks', (_message.Message,), {
    'DESCRIPTOR' : _SEGMENTATION_CONFIDENCEMASKS,
    '__module__' : 'tensorflow_lite_support.cc.task.vision.proto.segmentations_pb2'
    # @@protoc_insertion_point(class_scope:tflite.task.vision.Segmentation.ConfidenceMasks)
    })
  ,

  'ColoredLabel' : _reflection.GeneratedProtocolMessageType('ColoredLabel', (_message.Message,), {
    'DESCRIPTOR' : _SEGMENTATION_COLOREDLABEL,
    '__module__' : 'tensorflow_lite_support.cc.task.vision.proto.segmentations_pb2'
    # @@protoc_insertion_point(class_scope:tflite.task.vision.Segmentation.ColoredLabel)
    })
  ,
  'DESCRIPTOR' : _SEGMENTATION,
  '__module__' : 'tensorflow_lite_support.cc.task.vision.proto.segmentations_pb2'
  # @@protoc_insertion_point(class_scope:tflite.task.vision.Segmentation)
  })
_sym_db.RegisterMessage(Segmentation)
_sym_db.RegisterMessage(Segmentation.ConfidenceMask)
_sym_db.RegisterMessage(Segmentation.ConfidenceMasks)
_sym_db.RegisterMessage(Segmentation.ColoredLabel)


_SEGMENTATION_CONFIDENCEMASK.fields_by_name['value']._options = None
# @@protoc_insertion_point(module_scope)
